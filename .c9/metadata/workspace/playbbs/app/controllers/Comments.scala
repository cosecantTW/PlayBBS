{"filter":false,"title":"Comments.scala","tooltip":"/playbbs/app/controllers/Comments.scala","undoManager":{"mark":91,"position":91,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":93,"column":1},"action":"insert","lines":["package controllers","","import play.api._","import play.api.mvc._","import play.api.libs.concurrent.Execution.Implicits.defaultContext","import play.api.libs.json._","import scala.concurrent.Future","","// Reactive Mongo imports","import reactivemongo.api._","","// Reactive Mongo plugin, including the JSON-specialized collection","import play.modules.reactivemongo.MongoController","import play.modules.reactivemongo.json.collection.JSONCollection","","/*"," * Example using ReactiveMongo + Play JSON library."," *"," * There are two approaches demonstrated in this controller:"," * - using JsObjects directly"," * - using case classes that can be turned into Json using Reads and Writes."," *"," * This controller uses case classes and their associated Reads/Writes"," * to read or write JSON structures."," *"," * Instead of using the default Collection implementation (which interacts with"," * BSON structures + BSONReader/BSONWriter), we use a specialized"," * implementation that works with JsObject + Reads/Writes."," *"," * Of course, you can still use the default Collection implementation"," * (BSONCollection.) See ReactiveMongo examples to learn how to use it."," */","object ApplicationUsingJsonReadersWriters extends Controller with MongoController {","  /*","   * Get a JSONCollection (a Collection implementation that is designed to work","   * with JsObject, Reads and Writes.)","   * Note that the `collection` is not a `val`, but a `def`. We do _not_ store","   * the collection reference to avoid potential problems in development with","   * Play hot-reloading.","   */","  def collection: JSONCollection = db.collection[JSONCollection](\"persons\")","","  // ------------------------------------------ //","  // Using case classes + Json Writes and Reads //","  // ------------------------------------------ //","  import play.api.data.Form","  import models._","  import models.JsonFormats._","","  def create = Action.async {","    val user = User(29, \"John\", \"Smith\", List(","      Feed(\"Slashdot news\", \"http://slashdot.org/slashdot.rdf\")))","    // insert the user","    val futureResult = collection.insert(user)","    // when the insert is performed, send a OK 200 result","    futureResult.map(_ => Ok)","  }","","  def createFromJson = Action.async(parse.json) { request =>","    /*","     * request.body is a JsValue.","     * There is an implicit Writes that turns this JsValue as a JsObject,","     * so you can call insert() with this JsValue.","     * (insert() takes a JsObject as parameter, or anything that can be","     * turned into a JsObject using a Writes.)","     */","    request.body.validate[User].map { user =>","      // `user` is an instance of the case class `models.User`","      collection.insert(user).map { lastError =>","        Logger.debug(s\"Successfully inserted with LastError: $lastError\")","        Created","      }","    }.getOrElse(Future.successful(BadRequest(\"invalid json\")))","  }","","  def findByName(lastName: String) = Action.async {","    // let's do our query","    val cursor: Cursor[User] = collection.","      // find all people with name `name`","      find(Json.obj(\"lastName\" -> lastName)).","      // sort them by creation date","      sort(Json.obj(\"created\" -> -1)).","      // perform the query and get a cursor of JsObject","      cursor[User]","","    // gather all the JsObjects in a list","    val futureUsersList: Future[List[User]] = cursor.collect[List]()","","    // everything's ok! Let's reply with the array","    futureUsersList.map { persons =>","      Ok(persons.toString)","    }","  }","}"]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":0},"end":{"row":8,"column":25},"action":"remove","lines":["","// Reactive Mongo imports"]}]}],[{"group":"doc","deltas":[{"start":{"row":9,"column":0},"end":{"row":10,"column":67},"action":"remove","lines":["","// Reactive Mongo plugin, including the JSON-specialized collection"]}]}],[{"group":"doc","deltas":[{"start":{"row":38,"column":66},"end":{"row":38,"column":73},"action":"remove","lines":["persons"]},{"start":{"row":38,"column":66},"end":{"row":38,"column":67},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":38,"column":67},"end":{"row":38,"column":68},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":38,"column":68},"end":{"row":38,"column":69},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":38,"column":69},"end":{"row":38,"column":70},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":38,"column":70},"end":{"row":38,"column":71},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":38,"column":71},"end":{"row":38,"column":72},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":38,"column":72},"end":{"row":38,"column":73},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":38,"column":73},"end":{"row":38,"column":74},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":0},"end":{"row":37,"column":5},"action":"remove","lines":["  /*","   * Get a JSONCollection (a Collection implementation that is designed to work","   * with JsObject, Reads and Writes.)","   * Note that the `collection` is not a `val`, but a `def`. We do _not_ store","   * the collection reference to avoid potential problems in development with","   * Play hot-reloading.","   */"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":18},"end":{"row":30,"column":42},"action":"remove","lines":["UsingJsonReadersWriters "]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":18},"end":{"row":30,"column":19},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":7},"end":{"row":30,"column":8},"action":"insert","lines":["C"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":8},"end":{"row":30,"column":9},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":9},"end":{"row":30,"column":10},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":10},"end":{"row":30,"column":11},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":11},"end":{"row":30,"column":12},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":12},"end":{"row":30,"column":13},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":13},"end":{"row":30,"column":14},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":14},"end":{"row":30,"column":15},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":0},"end":{"row":36,"column":50},"action":"remove","lines":["  // ------------------------------------------ //","  // Using case classes + Json Writes and Reads //","  // ------------------------------------------ //"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":0},"end":{"row":29,"column":3},"action":"remove","lines":["","/*"," * Example using ReactiveMongo + Play JSON library."," *"," * There are two approaches demonstrated in this controller:"," * - using JsObjects directly"," * - using case classes that can be turned into Json using Reads and Writes."," *"," * This controller uses case classes and their associated Reads/Writes"," * to read or write JSON structures."," *"," * Instead of using the default Collection implementation (which interacts with"," * BSON structures + BSONReader/BSONWriter), we use a specialized"," * implementation that works with JsObject + Reads/Writes."," *"," * Of course, you can still use the default Collection implementation"," * (BSONCollection.) See ReactiveMongo examples to learn how to use it."," */"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":6},"end":{"row":48,"column":16},"action":"remove","lines":["findByName"]},{"start":{"row":48,"column":6},"end":{"row":48,"column":12},"action":"insert","lines":["getAll"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":12},"end":{"row":48,"column":30},"action":"remove","lines":["(lastName: String)"]}]}],[{"group":"doc","deltas":[{"start":{"row":22,"column":6},"end":{"row":22,"column":12},"action":"remove","lines":["create"]},{"start":{"row":22,"column":6},"end":{"row":22,"column":19},"action":"insert","lines":["createComment"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":6},"end":{"row":31,"column":20},"action":"remove","lines":["createFromJson"]},{"start":{"row":31,"column":6},"end":{"row":31,"column":19},"action":"insert","lines":["updateComment"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":19},"end":{"row":31,"column":21},"action":"insert","lines":["()"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":20},"end":{"row":31,"column":21},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":21},"end":{"row":31,"column":22},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":22},"end":{"row":31,"column":23},"action":"insert","lines":[":"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":23},"end":{"row":31,"column":24},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":24},"end":{"row":31,"column":25},"action":"insert","lines":["S"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":25},"end":{"row":31,"column":26},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":26},"end":{"row":31,"column":27},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":27},"end":{"row":31,"column":28},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":28},"end":{"row":31,"column":29},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":29},"end":{"row":31,"column":30},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":15},"end":{"row":49,"column":0},"action":"insert","lines":["",""]},{"start":{"row":49,"column":0},"end":{"row":49,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":2},"end":{"row":50,"column":0},"action":"insert","lines":["",""]},{"start":{"row":50,"column":0},"end":{"row":50,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":2},"end":{"row":50,"column":3},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":3},"end":{"row":50,"column":4},"action":"insert","lines":["*"]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":4},"end":{"row":51,"column":0},"action":"insert","lines":["",""]},{"start":{"row":51,"column":0},"end":{"row":51,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":68,"column":3},"end":{"row":69,"column":0},"action":"insert","lines":["",""]},{"start":{"row":69,"column":0},"end":{"row":69,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":2},"end":{"row":69,"column":3},"action":"insert","lines":["*"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":3},"end":{"row":69,"column":4},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":15},"end":{"row":48,"column":16},"action":"insert","lines":["T"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":16},"end":{"row":48,"column":17},"action":"insert","lines":["O"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":17},"end":{"row":48,"column":18},"action":"insert","lines":["D"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":18},"end":{"row":48,"column":19},"action":"insert","lines":["O"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":34},"end":{"row":31,"column":35},"action":"insert","lines":["T"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":35},"end":{"row":31,"column":36},"action":"insert","lines":["O"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":36},"end":{"row":31,"column":37},"action":"insert","lines":["D"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":37},"end":{"row":31,"column":38},"action":"insert","lines":["O"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":38},"end":{"row":32,"column":0},"action":"insert","lines":["",""]},{"start":{"row":32,"column":0},"end":{"row":32,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":32,"column":2},"end":{"row":33,"column":0},"action":"insert","lines":["",""]},{"start":{"row":33,"column":0},"end":{"row":33,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":33,"column":2},"end":{"row":33,"column":3},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":33,"column":3},"end":{"row":33,"column":4},"action":"insert","lines":["*"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":0},"end":{"row":40,"column":7},"action":"remove","lines":["    /*","     * request.body is a JsValue.","     * There is an implicit Writes that turns this JsValue as a JsObject,","     * so you can call insert() with this JsValue.","     * (insert() takes a JsObject as parameter, or anything that can be","     * turned into a JsObject using a Writes.)","     */"]}]}],[{"group":"doc","deltas":[{"start":{"row":43,"column":0},"end":{"row":43,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":43,"column":4},"end":{"row":43,"column":5},"action":"insert","lines":["*"]}]}],[{"group":"doc","deltas":[{"start":{"row":43,"column":5},"end":{"row":43,"column":6},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":22,"column":22},"end":{"row":29,"column":3},"action":"remove","lines":["Action.async {","    val user = User(29, \"John\", \"Smith\", List(","      Feed(\"Slashdot news\", \"http://slashdot.org/slashdot.rdf\")))","    // insert the user","    val futureResult = collection.insert(user)","    // when the insert is performed, send a OK 200 result","    futureResult.map(_ => Ok)","  }"]},{"start":{"row":22,"column":22},"end":{"row":31,"column":3},"action":"insert","lines":["Action.async(parse.json) { request =>","","    request.body.validate[User].map { user =>","      // `user` is an instance of the case class `models.User`","      collection.insert(user).map { lastError =>","        Logger.debug(s\"Successfully inserted with LastError: $lastError\")","        Created","      }","    }.getOrElse(Future.successful(BadRequest(\"invalid json\")))","  }"]}]}],[{"group":"doc","deltas":[{"start":{"row":25,"column":0},"end":{"row":25,"column":62},"action":"remove","lines":["      // `user` is an instance of the case class `models.User`"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":26},"end":{"row":24,"column":30},"action":"remove","lines":["User"]},{"start":{"row":24,"column":26},"end":{"row":24,"column":33},"action":"insert","lines":["Comment"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":41},"end":{"row":24,"column":45},"action":"remove","lines":["user"]},{"start":{"row":24,"column":41},"end":{"row":24,"column":42},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":42},"end":{"row":24,"column":43},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":43},"end":{"row":24,"column":44},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":44},"end":{"row":24,"column":45},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":45},"end":{"row":24,"column":46},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":46},"end":{"row":24,"column":47},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":47},"end":{"row":24,"column":48},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":24},"end":{"row":26,"column":28},"action":"remove","lines":["user"]},{"start":{"row":26,"column":24},"end":{"row":26,"column":25},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":25},"end":{"row":26,"column":26},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":26},"end":{"row":26,"column":27},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":27},"end":{"row":26,"column":28},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":28},"end":{"row":26,"column":29},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":29},"end":{"row":26,"column":30},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":30},"end":{"row":26,"column":31},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":15},"end":{"row":28,"column":17},"action":"insert","lines":["()"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":16},"end":{"row":28,"column":18},"action":"insert","lines":["\"\""]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":17},"end":{"row":28,"column":24},"action":"insert","lines":["Comment"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":24},"end":{"row":28,"column":25},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":25},"end":{"row":28,"column":26},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":26},"end":{"row":28,"column":27},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":27},"end":{"row":28,"column":28},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":28},"end":{"row":28,"column":29},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":29},"end":{"row":28,"column":30},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":30},"end":{"row":28,"column":31},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":31},"end":{"row":28,"column":32},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":32},"end":{"row":28,"column":33},"action":"insert","lines":["."]}]}]]},"ace":{"folds":[],"scrolltop":751,"scrollleft":0,"selection":{"start":{"row":39,"column":48},"end":{"row":39,"column":48},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":38,"state":"comment","mode":"ace/mode/scala"}},"timestamp":1425869471439,"hash":"9a0f8b08b37d359f087bd16a724acbcf7a11aa42"}